(prog (compilation_unit (extern_alias_directive extern alias (identifier Foo) ;) (using_directive (using_namespace_directive using (namespace_name (identifier System)) ;)) (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Collections)) . (identifier Generic))) ;)) (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Linq))) ;)) (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Linq)) . (identifier Expressions))) ;)) (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Text))) ;)) (using_directive (using_alias_directive using (identifier M) = (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Math)) ;)) (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (identifier ConsoleApplication2)) . (identifier Test))) ;)) (using_directive (using_alias_directive using (identifier X) = (namespace_or_type_name (identifier int1)) ;)) (using_directive (using_alias_directive using (identifier Y) = (namespace_or_type_name (namespace_or_type_name (identifier ABC)) . (identifier X) (type_argument_list < (type_arguments (integral_type int)) >)) ;)) (using_directive (using_static_directive using static (type_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Math))) ;)) (using_directive (using_static_directive using static (type_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier DayOfWeek))) ;)) (using_directive (using_static_directive using static (type_name (namespace_or_type_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Linq)) . (identifier Enumerable))) ;)) (global_attributes (global_attribute_section [ (global_attribute_target_specifier (global_attribute_target (identifier assembly)) :) (attribute_list (attribute (attribute_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Copyright))) (attribute_arguments ( (positional_argument_list (literal @"(C)"" \n\n2009")) )))) ]) (global_attribute_section [ (global_attribute_target_specifier (global_attribute_target (identifier module)) :) (attribute_list (attribute (attribute_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Copyright))) (attribute_arguments ( (positional_argument_list (additive_expression (additive_expression (literal "\n\t\u0123(C) \"2009")) + (multiplicative_expression (literal "\u0123")))) )))) ])) (namespace_member_declaration (class_declaration class (identifier TopLevelType) (class_base : (class_type (identifier IDisposable))) (class_body { (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (interface_type (identifier IDisposable)) . (identifier Dispose)) ( )) (method_body (block { })))) }))) (namespace_member_declaration (namespace_declaration namespace (qualified_identifier (identifier My)) (namespace_body { (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (identifier A)) . (identifier B))) ;)) (namespace_member_declaration (interface_declaration interface (identifier CoContra) (variant_type_parameter_list < (variant_type_parameters (variant_type_parameters (variance_annotation out) (type_parameter (identifier T))) , (variance_annotation in) (type_parameter (identifier K))) >) (interface_body { }))) (namespace_member_declaration (delegate_declaration delegate (return_type void) (delegate_header (identifier CoContra2) (variant_type_parameter_list < (variant_type_parameters (variant_type_parameters (attributes (attribute_section [ (attribute_list (attribute (attribute_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Obsolete))) (attribute_arguments ( )))) ])) (variance_annotation out) (type_parameter (identifier T))) , (variance_annotation in) (type_parameter (identifier K))) >) ( ) (type_parameter_constraints_clause where (type_parameter (identifier T)) : (type_parameter_constraints (primary_constraint struct))) ;))) (namespace_member_declaration (class_declaration (class_modifier public) (class_modifier (unsafe_modifier unsafe)) partial class (identifier A) (class_base : (interface_type_list (interface_type (identifier C)) , (interface_type (identifier I)))) (class_body { (class_member_declaration (method_declaration (attributes (attribute_section [ (attribute_list (attribute (attribute_name (identifier DllImport)) (attribute_arguments ( (positional_argument_list (literal "kernel32")) , (named_argument_list (named_argument (identifier SetLastError) = (attribute_argument_expression (boolean_literal true)))) )))) ])) (method_modifiers (method_modifier (ref_method_modifier static)) (method_modifier (ref_method_modifier extern))) (return_type (simple_type bool)) (method_header (member_name (identifier CreateDirectory)) ( (parameter_list (fixed_parameters (fixed_parameter (type (class_type string)) (identifier name)) , (fixed_parameter (type (identifier SecurityAttribute)) (identifier sa)))) )) (method_body ;))) (class_member_declaration (constant_declaration (constant_modifier private) const (type (integral_type int)) (constant_declarators (constant_declarator (identifier (contextual_keyword global)) = (constant_expression (additive_expression (additive_expression (member_access (predefined_type int) . (identifier MinValue))) - (multiplicative_expression (literal 1)))))) ;)) (class_member_declaration (static_constructor_declaration (static_constructor_modifiers static) (identifier A) ( ) (static_constructor_body (block { })))) (class_member_declaration (constructor_declaration (attributes (attribute_section [ (attribute_target_specifier (attribute_target (identifier method)) :) (attribute_list (identifier Obsolete)) ])) (constructor_modifier public) (constructor_declarator (identifier A) ( (parameter_list (fixed_parameter (attributes (attribute_section [ (attribute_target_specifier (attribute_target (identifier param)) :) (attribute_list (identifier Obsolete)) ])) (type (integral_type int)) (identifier foo))) ) (constructor_initializer : base ( (argument_list (literal 1)) ))) (constructor_body (block { (statement_list (statement (labeled_statement (identifier L) : (statement (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier i) = (local_variable_initializer (sizeof_expression sizeof ( (unmanaged_type (integral_type int)) ))))))) ;)) (statement (expression_statement (statement_expression (pre_increment_expression ++ (unary_expression (identifier i)))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier s1) = (expression (interpolated_regular_string_expression 〔$"〕 〔x 〕 { (regular_interpolation (expression (literal 1)) , (interpolation_minimum_width (unary_expression - (unary_expression (literal 2)))) 〔:d〕) } 〔"〕))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier s2) = (expression (interpolated_verbatim_string_expression 〔$@"〕 〔x 〕 { (verbatim_interpolation (expression (literal 1)) , (interpolation_minimum_width (unary_expression - (unary_expression (literal 2)))) 〔:d〕) } 〔"〕))))) ;))) })))) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier Console)) . (identifier WriteLine))) ( (argument_list (member_access (primary_expression (member_access (primary_expression (identifier export)) . (identifier iefSupplied))) . (identifier command))) ))) ;)) (statement (declaration_statement (local_constant_declaration const (type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (constant_declarators (constant_declarator (identifier local) = (constant_expression (member_access (predefined_type int) . (identifier MaxValue)))))) ;)) (statement (declaration_statement (local_constant_declaration const (type (nullable_reference_type (non_nullable_reference_type (identifier Guid)) (nullable_type_annotation ?))) (constant_declarators (constant_declarator (identifier local0) = (constant_expression (object_creation_expression new (type (identifier Guid)) ( (argument_list (invocation_expression (primary_expression (member_access (primary_expression (identifier r)) . (identifier ToString))) ( ))) )))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier привет) = (expression (identifier local))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier мир) = (expression (identifier local))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (contextual_keyword var)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier local3) = (local_variable_initializer (literal 0))) , (explicitly_typed_local_variable_declarator (identifier local4) = (local_variable_initializer (literal 1)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier local3)) (assignment_operator =) (expression (assignment (unary_expression (identifier local4)) (assignment_operator =) (expression (literal 1)))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier local5) = (expression (null_coalescing_expression (conditional_or_expression (relational_expression (relational_expression (null_literal null)) as (type (identifier Action)))) ?? (null_coalescing_expression (null_literal null))))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier local6) = (expression (relational_expression (relational_expression (identifier local5)) is (type (identifier Action))))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier u) = (expression (literal 1u))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier U) = (expression (literal 1U))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type long)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier hex) = (local_variable_initializer (literal 0xBADC0DE))) , (explicitly_typed_local_variable_declarator (identifier Hex) = (local_variable_initializer (literal 0XDEADBEEF))) , (explicitly_typed_local_variable_declarator (identifier l) = (local_variable_initializer (unary_expression - (unary_expression (literal 1L))))) , (explicitly_typed_local_variable_declarator (identifier L) = (local_variable_initializer (literal 1L))) , (explicitly_typed_local_variable_declarator (identifier l2) = (local_variable_initializer (literal 2l)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type ulong)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier ul) = (local_variable_initializer (literal 1ul))) , (explicitly_typed_local_variable_declarator (identifier Ul) = (local_variable_initializer (literal 1Ul))) , (explicitly_typed_local_variable_declarator (identifier uL) = (local_variable_initializer (literal 1uL))) , (explicitly_typed_local_variable_declarator (identifier UL) = (local_variable_initializer (literal 1UL))) , (explicitly_typed_local_variable_declarator (identifier lu) = (local_variable_initializer (literal 1lu))) , (explicitly_typed_local_variable_declarator (identifier Lu) = (local_variable_initializer (literal 1Lu))) , (explicitly_typed_local_variable_declarator (identifier lU) = (local_variable_initializer (literal 1lU))) , (explicitly_typed_local_variable_declarator (identifier LU) = (local_variable_initializer (literal 1LU)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier minInt32Value) = (local_variable_initializer (unary_expression - (unary_expression (literal 2147483648)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier minInt64Value) = (local_variable_initializer (unary_expression - (unary_expression (literal 9223372036854775808L)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (simple_type bool)) (explicitly_typed_local_variable_declarators (identifier @bool)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type byte)) (explicitly_typed_local_variable_declarators (identifier @byte)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type char)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier @char) = (local_variable_initializer (literal 'c'))) , (explicitly_typed_local_variable_declarator (identifier \u0066) = (local_variable_initializer (literal '\u0066'))) , (explicitly_typed_local_variable_declarator (identifier hexchar) = (local_variable_initializer (literal '\x0130'))) , (explicitly_typed_local_variable_declarator (identifier hexchar2) = (local_variable_initializer (cast_expression ( (type (integral_type char)) ) (unary_expression (literal 0xBAD)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type string)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier \U00000065) = (local_variable_initializer (literal "\U00000065")))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (numeric_type decimal)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier @decimal) = (local_variable_initializer (literal 1.44M)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier @decimal)) (assignment_operator =) (expression (literal 1.2m)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (contextual_keyword dynamic)) (explicitly_typed_local_variable_declarators (identifier @dynamic)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (floating_point_type double)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier @double) = (local_variable_initializer (member_access (primary_expression (identifier M)) . (identifier PI))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier @double)) (assignment_operator =) (expression (literal 1d)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier @double)) (assignment_operator =) (expression (literal 1D)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier @double)) (assignment_operator =) (expression (unary_expression - (unary_expression (literal 1.2e3)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (floating_point_type float)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier @float) = (local_variable_initializer (literal 1.2f)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier @float)) (assignment_operator =) (expression (literal 1.44F)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier @int) = (local_variable_initializer (null_coalescing_expression (conditional_or_expression (identifier local)) ?? (null_coalescing_expression (unary_expression - (unary_expression (literal 1)))))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type long)) (explicitly_typed_local_variable_declarators (identifier @long)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type object)) (explicitly_typed_local_variable_declarators (identifier @object)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type sbyte)) (explicitly_typed_local_variable_declarators (identifier @sbyte)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type short)) (explicitly_typed_local_variable_declarators (identifier @short)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type string)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier @string) = (local_variable_initializer (literal @"""/*")))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type uint)) (explicitly_typed_local_variable_declarators (identifier @uint)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type ulong)) (explicitly_typed_local_variable_declarators (identifier @ulong)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type ushort)) (explicitly_typed_local_variable_declarators (identifier @ushort)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (contextual_keyword dynamic)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier (contextual_keyword dynamic)) = (local_variable_initializer (identifier local5)))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword add)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword alias)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier arglist) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword ascending)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword async)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword await)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword by)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword descending)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword dynamic)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword equals)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword from)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword get)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword group)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword into)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword join)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword let)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword nameof)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword on)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword orderby)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword partial)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword remove)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword select)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword set)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword var)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword when)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword where)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier (contextual_keyword yield)) = (expression (literal 0))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier __) = (expression (literal 0))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (contextual_keyword where)) (assignment_operator =) (expression (assignment (unary_expression (contextual_keyword yield)) (assignment_operator =) (expression (literal 0)))))) ;)) (statement (if_statement if ( (boolean_expression (relational_expression (relational_expression (identifier i)) > (shift_expression (literal 0)))) ) (embedded_statement (block { (statement_list (return_statement return ;)) })) else (embedded_statement (if_statement if ( (boolean_expression (equality_expression (equality_expression (identifier i)) == (relational_expression (literal 0)))) ) (embedded_statement (block { (statement_list (throw_statement throw (expression (object_creation_expression new (type (identifier Exception)) ( ))) ;)) })))))) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier o1) = (expression (object_creation_expression new (type (identifier MyObject)) ( )))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier o2) = (expression (object_creation_expression new (type (identifier MyObject)) ( (argument_list (contextual_keyword var)) )))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier o3) = (expression (object_creation_expression new (type (identifier MyObject)) (object_or_collection_initializer (object_initializer { (member_initializer_list (member_initializer (initializer_target (identifier A)) = (initializer_value (identifier i)))) }))))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier o4) = (expression (object_creation_expression new (type (identifier MyObject)) ( (argument_list (identifier @dynamic)) ) (object_or_collection_initializer (object_initializer { (member_initializer_list (member_initializer (initializer_target (identifier A)) = (initializer_value (literal 0))) , (member_initializer (initializer_target (identifier B)) = (initializer_value (literal 0))) , (member_initializer (initializer_target (identifier C)) = (initializer_value (literal 0)))) }))))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier o5) = (expression (anonymous_object_creation_expression new (anonymous_object_initializer { (member_declarator_list (member_declarator (identifier A) = (expression (literal 0)))) })))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier dictionaryInitializer) = (expression (object_creation_expression new (type (namespace_or_type_name (identifier Dictionary) (type_argument_list < (type_arguments (type_argument (integral_type int)) , (type_argument (class_type string))) >))) (object_or_collection_initializer (collection_initializer { (element_initializer_list (element_initializer { (expression_list (expression_list (literal 1)) , (expression (literal ""))) }) , (element_initializer { (expression_list (expression_list (literal 2)) , (expression (literal "a"))) })) }))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (floating_point_type float)) (rank_specifier [ ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier a) = (local_variable_initializer (object_creation_expression new (type (array_type (non_array_type (floating_point_type float)) (rank_specifier [ ]))) (object_or_collection_initializer (collection_initializer { (element_initializer_list (element_initializer (literal 0f)) , (element_initializer (literal 1.1f))) })))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (integral_type int)) (rank_specifier [ , , ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier cube) = (local_variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (literal 111)) , (variable_initializer (literal 112))) , })) , (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (literal 121)) , (variable_initializer (literal 122))) }))) })) , (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (literal 211)) , (variable_initializer (literal 212))) })) , (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (literal 221)) , (variable_initializer (literal 222))) }))) }))) })))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (integral_type int)) (rank_specifier [ ]) (rank_specifier [ ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier jagged) = (local_variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (array_initializer { (variable_initializer_list (literal 111)) })) , (variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (literal 121)) , (variable_initializer (literal 122))) }))) })))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (integral_type int)) (rank_specifier [ ]) (rank_specifier [ , ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier arr) = (local_variable_initializer (array_creation_expression new (non_array_type (integral_type int)) [ (expression_list (literal 5)) ] (rank_specifier [ , ]))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (element_access (primary_no_array_creation_expression (identifier arr)) [ (argument_list (literal 0)) ])) (assignment_operator =) (expression (array_creation_expression new (non_array_type (integral_type int)) [ (expression_list (expression_list (literal 5)) , (expression (literal 5))) ])))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (element_access (primary_no_array_creation_expression (element_access (primary_no_array_creation_expression (identifier arr)) [ (argument_list (literal 0)) ])) [ (argument_list (argument (literal 0)) , (argument (literal 0))) ])) (assignment_operator =) (expression (literal 47)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (integral_type int)) (rank_specifier [ ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier arrayTypeInference) = (local_variable_initializer (array_creation_expression new (rank_specifier [ ]) (array_initializer { (variable_initializer_list (variable_initializer (literal 0)) , (variable_initializer (literal 1))) , }))))))) ;)) (statement (switch_statement switch ( (expression (literal 3)) ) (switch_block { }))) (statement (switch_statement switch ( (expression (identifier i)) ) (switch_block { (switch_section (switch_label case (pattern (literal 0)) :) (switch_label case (pattern (literal 1)) :) (statement_list (block { (statement_list (goto_statement goto case (constant_expression (literal 2)) ;)) }))) (switch_section (switch_label case (pattern (additive_expression (additive_expression (literal 2)) + (multiplicative_expression (literal 3)))) :) (statement_list (block { (statement_list (statement (goto_statement goto default ;)) (statement (break_statement break ;))) }))) (switch_section (switch_label default :) (statement_list (block { (statement_list (return_statement return ;)) }))) }))) (statement (while_statement while ( (boolean_expression (relational_expression (relational_expression (identifier i)) < (shift_expression (literal 10)))) ) (embedded_statement (block { (statement_list (statement (expression_statement (statement_expression (pre_increment_expression ++ (unary_expression (identifier i)))) ;)) (statement (if_statement if ( (boolean_expression (boolean_literal true)) ) (embedded_statement (continue_statement continue ;)))) (statement (break_statement break ;))) })))) (statement (do_statement do (embedded_statement (block { (statement_list (statement (expression_statement (statement_expression (pre_increment_expression ++ (unary_expression (identifier i)))) ;)) (statement (if_statement if ( (boolean_expression (boolean_literal true)) ) (embedded_statement (continue_statement continue ;)))) (statement (break_statement break ;))) })) while ( (boolean_expression (relational_expression (relational_expression (identifier i)) < (shift_expression (literal 10)))) ) ;)) (statement (for_statement for ( (for_initializer (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier j) = (local_variable_initializer (literal 0)))))) ; (for_condition (relational_expression (relational_expression (identifier j)) < (shift_expression (literal 100)))) ; (for_iterator (pre_increment_expression ++ (unary_expression (identifier j)))) ) (embedded_statement (block { (statement_list (for_statement for ( ; ; ) (embedded_statement (block { (statement_list (statement (for_statement for ( (for_initializer (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier i) = (local_variable_initializer (literal 0))) , (explicitly_typed_local_variable_declarator (identifier j) = (local_variable_initializer (literal 0)))))) ; (for_condition (relational_expression (relational_expression (identifier i)) < (shift_expression (identifier length)))) ; (for_iterator (statement_expression_list (statement_expression (post_increment_expression (primary_expression (identifier i)) ++)) , (statement_expression (post_increment_expression (primary_expression (identifier j)) ++)))) ) (embedded_statement (block { })))) (statement (if_statement if ( (boolean_expression (boolean_literal true)) ) (embedded_statement (continue_statement continue ;)))) (statement (break_statement break ;))) })))) })))) (statement (labeled_statement (identifier label) : (statement (goto_statement goto (identifier label) ;)))) (statement (labeled_statement (identifier label2) : (statement (empty_statement ;)))) (statement (foreach_statement foreach ( (local_variable_type (contextual_keyword var)) (identifier i) in (expression (invocation_expression (primary_expression (identifier Items)) ( ))) ) (embedded_statement (block { (statement_list (if_statement if ( (boolean_expression (equality_expression (equality_expression (identifier i)) == (relational_expression (literal 7)))) ) (embedded_statement (return_statement return ;)) else (embedded_statement (continue_statement continue ;)))) })))) (statement (lock_statement lock ( (expression (identifier sync)) ) (embedded_statement (expression_statement (statement_expression (invocation_expression (primary_expression (identifier process)) ( ))) ;)))) (statement (using_statement using ( (resource_acquisition (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier v) = (expression (invocation_expression (primary_expression (identifier BeginScope)) ( )))))) ) (embedded_statement (using_statement using ( (resource_acquisition (explicitly_typed_local_variable_declaration (type (identifier A)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier a) = (local_variable_initializer (object_creation_expression new (type (identifier A)) ( ))))))) ) (embedded_statement (using_statement using ( (resource_acquisition (explicitly_typed_local_variable_declaration (type (identifier A)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier a) = (local_variable_initializer (object_creation_expression new (type (identifier A)) ( )))) , (explicitly_typed_local_variable_declarator (identifier b) = (local_variable_initializer (object_creation_expression new (type (identifier A)) ( ))))))) ) (embedded_statement (using_statement using ( (resource_acquisition (invocation_expression (primary_expression (identifier BeginScope)) ( ))) ) (embedded_statement (return_statement return ;)))))))))) (statement (yield_statement yield return (expression (element_access (primary_no_array_creation_expression (member_access (primary_expression (this_access this)) . (identifier items))) [ (argument_list (literal 3)) ])) ;)) (statement (yield_statement yield break ;)) (statement (fixed_statement fixed ( (pointer_type (value_type (integral_type int)) *) (fixed_pointer_declarators (fixed_pointer_declarator (identifier p) = (fixed_pointer_initializer (stackalloc_expression stackalloc (unmanaged_type (integral_type int)) [ (expression (literal 100)) ]))) , (fixed_pointer_declarator (identifier q) = (fixed_pointer_initializer & (variable_reference (identifier y))))) ) (embedded_statement (block { (statement_list (expression_statement (statement_expression (assignment (unary_expression (pointer_indirection_expression * (unary_expression (identifier intref)))) (assignment_operator =) (expression (literal 1)))) ;)) })))) (statement (fixed_statement fixed ( (pointer_type (value_type (integral_type int)) *) (fixed_pointer_declarators (fixed_pointer_declarator (identifier p) = (fixed_pointer_initializer (stackalloc_expression stackalloc (unmanaged_type (integral_type int)) [ (expression (literal 100)) ])))) ) (embedded_statement (block { (statement_list (expression_statement (statement_expression (assignment (unary_expression (pointer_indirection_expression * (unary_expression (identifier intref)))) (assignment_operator =) (expression (literal 1)))) ;)) })))) (statement (unsafe_statement unsafe (block { (statement_list (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (pointer_type (value_type (integral_type int)) *)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier p) = (local_variable_initializer (null_literal null)))))) ;)) }))) (statement (try_statement try (block { (statement_list (throw_statement throw (expression (null_literal null)) ;)) }) (catch_clauses (specific_catch_clause catch (exception_specifier ( (type (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier AccessViolationException))) (identifier av) )) (block { (statement_list (throw_statement throw (expression (identifier av)) ;)) })) (specific_catch_clause catch (exception_specifier ( (type (identifier Exception)) )) (block { (statement_list (throw_statement throw ;)) }))) (finally_clause finally (block { (statement_list (try_statement try (block { }) (catch_clauses (general_catch_clause catch (block { }))))) })))) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (contextual_keyword var)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier anonymous) = (local_variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (assignment (unary_expression (identifier A)) (assignment_operator =) (expression (literal 1)))) , (variable_initializer (assignment (unary_expression (identifier B)) (assignment_operator =) (expression (literal 2)))) , (variable_initializer (assignment (unary_expression (identifier C)) (assignment_operator =) (expression (literal 3))))) , })))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier query) = (expression (query_expression (from_clause from (identifier c) in (expression (identifier customers))) (query_body (query_body_clauses (query_body_clauses (query_body_clauses (query_body_clauses (let_clause let (identifier d) = (expression (identifier c)))) (query_body_clause (where_clause where (boolean_expression (equality_expression (equality_expression (identifier d)) != (relational_expression (null_literal null))))))) (query_body_clause (join_clause join (identifier c1) in (expression (identifier customers)) on (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier c1)) . (identifier GetHashCode))) ( ))) equals (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier c)) . (identifier GetHashCode))) ( )))))) (query_body_clause (join_into_clause join (identifier c1) in (expression (identifier customers)) on (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier c1)) . (identifier GetHashCode))) ( ))) equals (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier c)) . (identifier GetHashCode))) ( ))) into (identifier e)))) (select_or_group_clause (group_clause group (expression (identifier c)) by (expression (member_access (primary_expression (identifier c)) . (identifier Country))))) (query_continuation into (identifier g) (query_body (query_body_clauses (query_body_clauses (orderby_clause orderby (orderings (ordering (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier g)) . (identifier Count))) ( ))) (ordering_direction ascending))))) (query_body_clause (orderby_clause orderby (orderings (declaration_expression (local_variable_type (namespace_or_type_name (namespace_or_type_name (identifier g)) . (identifier Key))) (identifier (contextual_keyword descending))))))) (select_or_group_clause (select_clause select (expression (anonymous_object_creation_expression new (anonymous_object_initializer { (member_declarator_list (member_declarator (identifier Country) = (expression (member_access (primary_expression (identifier g)) . (identifier Key)))) , (member_declarator (identifier CustCount) = (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier g)) . (identifier Count))) ( ))))) }))))))))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier query)) (assignment_operator =) (expression (query_expression (from_clause from (identifier c) in (expression (identifier customers))) (query_body (select_or_group_clause (select_clause select (expression (identifier c)))) (query_continuation into (identifier d) (query_body (select_clause select (expression (identifier d)))))))))) ;))) })))) (class_member_declaration (finalizer_declaration ~ (identifier A) ( ) (finalizer_body (block { })))) (class_member_declaration (field_declaration (field_modifier private) (field_modifier readonly) (type (integral_type int)) (variable_declarators (identifier f1)) ;)) (class_member_declaration (field_declaration (attributes (attribute_section [ (attribute_list (identifier Obsolete)) ]) (attribute_section [ (attribute_list (identifier NonExisting)) ]) (attribute_section [ (attribute_list (attribute (attribute_name (qualified_alias_member (identifier Foo) :: (identifier NonExisting))) (attribute_arguments ( (positional_argument_list (positional_argument (contextual_keyword var)) , (positional_argument (literal 5))) )))) ]) (attribute_section [ (attribute_list (attribute (attribute_name (identifier CLSCompliant)) (attribute_arguments ( (positional_argument_list (boolean_literal false)) )))) ]) (attribute_section [ (attribute_list (attribute (identifier Obsolete)) , (attribute (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier NonSerialized))) , (attribute (identifier NonSerialized)) , (attribute (attribute_name (identifier CLSCompliant)) (attribute_arguments ( (positional_argument_list (conditional_or_expression (conditional_or_expression (boolean_literal true)) || (conditional_and_expression (and_expression (and_expression (boolean_literal false)) & (equality_expression (boolean_literal true)))))) )))) ])) (field_modifier private) (field_modifier volatile) (type (integral_type int)) (variable_declarators (identifier f2)) ;)) (class_member_declaration (method_declaration (attributes (attribute_section [ (attribute_target_specifier (attribute_target (keyword return)) :) (attribute_list (identifier Obsolete)) ]) (attribute_section [ (attribute_target_specifier (attribute_target (identifier method)) :) (attribute_list (identifier Obsolete)) ])) (method_modifiers (ref_method_modifier public)) (return_type void) (method_header (member_name (identifier Handler)) ( (parameter_list (fixed_parameter (type (class_type object)) (identifier (contextual_keyword value)))) )) (method_body (block { })))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type (integral_type int)) (method_header (member_name (identifier m)) (type_parameter_list < (type_parameters (identifier T)) >) ( (parameter_list (fixed_parameter (type (identifier T)) (identifier t))) ) (type_parameter_constraints_clause where (type_parameter (identifier T)) : (type_parameter_constraints (primary_constraint class) , (constructor_constraint new ( ))))) (method_body (block { (statement_list (statement (expression_statement (statement_expression (invocation_expression (primary_expression (base_access base . (identifier m))) ( (argument_list (identifier t)) ))) ;)) (statement (return_statement return (expression (literal 1)) ;))) })))) (class_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier P)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body (block { (statement_list (return_statement return (expression (literal "A")) ;)) }))) (set_accessor_declaration set (accessor_body ;))) }))) (class_member_declaration (property_declaration (property_modifier public) (property_modifier abstract) (type (class_type string)) (member_name (identifier P)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;))) }))) (class_member_declaration (indexer_declaration (indexer_modifier public) (indexer_modifier abstract) (indexer_declarator (type (integral_type int)) this [ (parameter_list (fixed_parameter (type (integral_type int)) (identifier index))) ]) (indexer_body { (accessor_declarations (get_accessor_declaration (accessor_modifier protected internal) get (accessor_body ;)) (set_accessor_declaration (accessor_modifier internal protected) set (accessor_body ;))) }))) (class_member_declaration (event_declaration (attributes (attribute_section [ (attribute_target_specifier (attribute_target (keyword event)) :) (attribute_list (identifier Test)) ])) (event_modifier public) event (type (identifier Action)) (member_name (identifier E1)) { (event_accessor_declarations (add_accessor_declaration (attributes (attribute_section [ (attribute_list (identifier Obsolete)) ])) add (block { (statement_list (expression_statement (statement_expression (assignment (unary_expression (contextual_keyword value)) (assignment_operator =) (expression (contextual_keyword value)))) ;)) })) (remove_accessor_declaration (attributes (attribute_section [ (attribute_list (identifier Obsolete)) ]) (attribute_section [ (attribute_target_specifier (attribute_target (keyword return)) :) (attribute_list (identifier Obsolete)) ])) remove (block { (statement_list (statement (expression_statement (statement_expression (assignment (unary_expression (identifier E)) (assignment_operator +=) (expression (identifier Handler)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier E)) (assignment_operator -=) (expression (identifier Handler)))) ;))) }))) })) (class_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (binary_operator_declarator (type (identifier A)) operator (overloadable_binary_operator +) ( (fixed_parameter (type (identifier A)) (identifier first)) , (fixed_parameter (type (identifier A)) (identifier second)) ))) (operator_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Delegate)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier handler) = (local_variable_initializer (object_creation_expression new (type (identifier Delegate)) ( (argument_list (identifier Handler)) ))))))) ;)) (statement (return_statement return (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier first)) . (identifier Add))) ( (argument_list (identifier second)) ))) ;))) })))) (class_member_declaration (operator_declaration (attributes (attribute_section [ (attribute_target_specifier (attribute_target (identifier method)) :) (attribute_list (identifier Obsolete)) ]) (attribute_section [ (attribute_target_specifier (attribute_target (keyword return)) :) (attribute_list (identifier Obsolete)) ])) (operator_modifier public) (operator_modifier static) (operator_declarator (unary_operator_declarator (type (simple_type bool)) operator (overloadable_unary_operator true) ( (fixed_parameter (type (identifier A)) (identifier a)) ))) (operator_body (block { (statement_list (return_statement return (expression (boolean_literal true)) ;)) })))) (class_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (unary_operator_declarator (type (simple_type bool)) operator (overloadable_unary_operator false) ( (fixed_parameter (type (identifier A)) (identifier a)) ))) (operator_body (block { (statement_list (return_statement return (expression (boolean_literal false)) ;)) })))) (class_member_declaration (class_declaration class (identifier C) (class_body { }))) }))) (namespace_member_declaration (struct_declaration (struct_modifier public) struct (identifier S) (struct_interfaces : (interface_type_list (identifier I))) (struct_body { (struct_member_declaration (constructor_declaration (constructor_modifier public) (constructor_declarator (identifier S) ( )) (constructor_body (block { })))) (struct_member_declaration (field_declaration (field_modifier private) (type (integral_type int)) (variable_declarators (identifier f1)) ;)) (struct_member_declaration (field_declaration (attributes (attribute_section [ (attribute_list (attribute (attribute_name (identifier Obsolete)) (attribute_arguments ( (positional_argument_list (positional_argument (literal "Use Script instead")) , (positional_argument (argument_name (identifier error) :) (attribute_argument_expression (boolean_literal false)))) )))) ])) (field_modifier private) (field_modifier volatile) (type (integral_type int)) (variable_declarators (identifier f2)) ;)) (struct_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier public)) (method_modifier (ref_method_modifier abstract))) (return_type (integral_type int)) (method_header (member_name (identifier m)) (type_parameter_list < (type_parameters (identifier T)) >) ( (parameter_list (fixed_parameter (type (identifier T)) (identifier t))) ) (type_parameter_constraints_clause where (type_parameter (identifier T)) : (type_parameter_constraints (primary_constraint struct)))) (method_body (block { (statement_list (return_statement return (expression (literal 1)) ;)) })))) (struct_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier P)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier (contextual_keyword value)) = (local_variable_initializer (literal 0)))))) ;)) (statement (return_statement return (expression (literal "A")) ;))) }))) (set_accessor_declaration set (accessor_body ;))) }))) (struct_member_declaration (property_declaration (property_modifier public) (property_modifier abstract) (type (class_type string)) (member_name (identifier P)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;))) }))) (struct_member_declaration (indexer_declaration (indexer_modifier public) (indexer_modifier abstract) (indexer_declarator (type (integral_type int)) this [ (parameter_list (fixed_parameter (type (integral_type int)) (identifier index))) ]) (indexer_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;)) (set_accessor_declaration (accessor_modifier internal protected) set (accessor_body ;))) }))) (struct_member_declaration (event_declaration (event_modifier public) event (type (identifier Event)) (variable_declarators (identifier E)) ;)) (struct_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (binary_operator_declarator (type (identifier A)) operator (overloadable_binary_operator +) ( (fixed_parameter (type (identifier A)) (identifier first)) , (fixed_parameter (type (identifier A)) (identifier second)) ))) (operator_body (block { (statement_list (return_statement return (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier first)) . (identifier Add))) ( (argument_list (identifier second)) ))) ;)) })))) (struct_member_declaration (fixed_size_buffer_declaration fixed (buffer_element_type (integral_type int)) (fixed_size_buffer_declarators (fixed_size_buffer_declarator (identifier field) [ (constant_expression (literal 10)) ])) ;)) (struct_member_declaration (class_declaration class (identifier C) (class_body { }))) }))) (namespace_member_declaration (interface_declaration (interface_modifier public) interface (identifier I) (interface_body { (interface_member_declaration (interface_method_declaration (return_type void) (interface_method_header (identifier A) ( (parameter_list (fixed_parameter (type (integral_type int)) (identifier (contextual_keyword value)))) ) ;))) (interface_member_declaration (interface_property_declaration (type (class_type string)) (identifier Value) { (interface_accessors get ; set ;) })) }))) (namespace_member_declaration (enum_declaration (attributes (attribute_section [ (attribute_target_specifier (attribute_target (identifier type)) :) (attribute_list (identifier Flags)) ])) (enum_modifier public) enum (identifier E) (enum_body { (enum_member_declarations (enum_member_declaration (identifier A)) , (enum_member_declaration (identifier B) = (constant_expression (identifier A))) , (enum_member_declaration (identifier C) = (constant_expression (additive_expression (additive_expression (literal 2)) + (multiplicative_expression (identifier A))))) , (enum_member_declaration (identifier D))) , }))) (namespace_member_declaration (delegate_declaration (delegate_modifier public) delegate (return_type void) (delegate_header (identifier Delegate) ( (parameter_list (fixed_parameter (type (class_type object)) (identifier P))) ) ;))) (namespace_member_declaration (namespace_declaration namespace (qualified_identifier (identifier Test)) (namespace_body { (using_directive (using_namespace_directive using (namespace_name (identifier System)) ;)) (using_directive (using_namespace_directive using (namespace_name (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Collections))) ;)) (namespace_member_declaration (class_declaration (class_modifier public) class (identifier Список) (class_body { (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier public)) (method_modifier (ref_method_modifier static))) (return_type (identifier IEnumerable)) (method_header (member_name (identifier Power)) ( (parameter_list (fixed_parameters (fixed_parameter (type (integral_type int)) (identifier number)) , (fixed_parameter (type (integral_type int)) (identifier exponent)))) )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Список)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier Список) = (local_variable_initializer (object_creation_expression new (type (identifier Список)) ( ))))))) ;)) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier Список)) . (identifier Main))) ( ))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier counter) = (local_variable_initializer (parenthesized_expression ( (expression (additive_expression (additive_expression (literal 0)) + (multiplicative_expression (literal 0)))) ))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier אתר) = (local_variable_initializer (literal 0)))))) ;)) (statement (while_statement while ( (boolean_expression (relational_expression (relational_expression (pre_increment_expression ++ (unary_expression (post_increment_expression (primary_expression (identifier counter)) ++)))) < (shift_expression (pre_decrement_expression -- (unary_expression (post_decrement_expression (primary_expression (identifier exponent)) --)))))) ) (embedded_statement (block { (statement_list (statement (expression_statement (statement_expression (assignment (unary_expression (identifier result)) (assignment_operator =) (expression (additive_expression (additive_expression (additive_expression (multiplicative_expression (multiplicative_expression (identifier result)) * (unary_expression (identifier number)))) + (multiplicative_expression (unary_expression + (unary_expression (post_increment_expression (primary_expression (post_increment_expression (primary_expression (identifier number)) ++)) ++))))) + (multiplicative_expression (identifier number)))))) ;)) (statement (yield_statement yield return (expression (identifier result)) ;))) }))))) })))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier static)) (return_type void) (method_header (member_name (identifier Main)) ( )) (method_body (block { (statement_list (foreach_statement foreach ( (local_variable_type (integral_type int)) (identifier i) in (expression (invocation_expression (primary_expression (identifier Power)) ( (argument_list (argument (literal 2)) , (argument (literal 8))) ))) ) (embedded_statement (block { (statement_list (expression_statement (statement_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier Console)) . (identifier Write))) ( (argument_list (argument (literal "{0} ")) , (argument (identifier i))) ))) ;)) })))) })))) (class_member_declaration (method_declaration (method_modifiers (method_modifier async)) (return_type void) (method_header (member_name (identifier Wait)) ( )) (method_body (block { (statement_list (expression_statement (statement_expression (await_expression await (unary_expression (invocation_expression (primary_expression (member_access (primary_expression (member_access (primary_expression (member_access (primary_expression (member_access (primary_expression (identifier System)) . (identifier Threading))) . (identifier Tasks))) . (identifier Task))) . (identifier Delay))) ( (argument_list (literal 0)) ))))) ;)) })))) (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier AsyncAnonymous)) ( )) (method_body (block { (statement_list (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier task) = (expression (invocation_expression (primary_expression (member_access (primary_expression (member_access (primary_expression (identifier Task)) . (identifier Factory))) . (identifier StartNew))) ( (argument_list (lambda_expression async (anonymous_function_signature (explicit_anonymous_function_signature ( ))) => (anonymous_function_body (block { (statement_list (return_statement return (expression (await_expression await (unary_expression (invocation_expression (primary_expression (member_access (primary_expression (object_creation_expression new (type (identifier WebClient)) ( ))) . (identifier DownloadStringTaskAsync))) ( (argument_list (literal "http://example.com")) ))))) ;)) })))) )))))) ;)) })))) }))) }))) }))) (namespace_member_declaration (namespace_declaration namespace (qualified_identifier (identifier ConsoleApplication1)) (namespace_body { (namespace_member_declaration (namespace_declaration namespace (qualified_identifier (identifier RecursiveGenericBaseType)) (namespace_body { (namespace_member_declaration (class_declaration class (identifier A) (type_parameter_list < (type_parameters (identifier T)) >) (class_base : (class_type (namespace_or_type_name (identifier B) (type_argument_list < (type_arguments (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) , (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >)))) >)))) (type_parameter_constraints_clause where (type_parameter (identifier T)) : (type_parameter_constraints (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >)))) (class_body { (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier protected)) (method_modifier (ref_method_modifier virtual))) (return_type (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) (method_header (member_name (identifier M)) ( )) (method_body (block { })))) (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier protected)) (method_modifier (ref_method_modifier abstract))) (return_type (namespace_or_type_name (identifier B) (type_argument_list < (type_arguments (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) , (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >)))) >))) (method_header (member_name (identifier N)) ( )) (method_body (block { })))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier static)) (return_type (namespace_or_type_name (identifier B) (type_argument_list < (type_arguments (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) , (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >)))) >))) (method_header (member_name (identifier O)) ( )) (method_body (block { })))) }))) (namespace_member_declaration (class_declaration (class_modifier sealed) class (identifier B) (type_parameter_list < (type_parameters (type_parameters (identifier T1)) , (type_parameter (identifier T2))) >) (class_base : (class_type (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (namespace_or_type_name (identifier B) (type_argument_list < (type_arguments (type_argument (identifier T1)) , (type_argument (identifier T2))) >))) >)))) (class_body { (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier protected)) (method_modifier (ref_method_modifier override))) (return_type (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) (method_header (member_name (identifier M)) ( )) (method_body (block { })))) (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier protected)) (method_modifier (ref_method_modifier sealed)) (method_modifier (ref_method_modifier override))) (return_type (namespace_or_type_name (identifier B) (type_argument_list < (type_arguments (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) , (type_argument (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >)))) >))) (method_header (member_name (identifier N)) ( )) (method_body (block { })))) (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier new)) (method_modifier (ref_method_modifier static))) (return_type (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (identifier T)) >))) (method_header (member_name (identifier O)) ( )) (method_body (block { })))) }))) }))) (namespace_member_declaration (namespace_declaration namespace (qualified_identifier (identifier Boo)) (namespace_body { (namespace_member_declaration (class_declaration (class_modifier public) class (identifier Bar) (type_parameter_list < (type_parameters (identifier T)) >) (type_parameter_constraints_clause where (type_parameter (identifier T)) : (type_parameter_constraints (identifier IComparable))) (class_body { (class_member_declaration (field_declaration (field_modifier public) (type (identifier T)) (variable_declarators (identifier f)) ;)) (class_member_declaration (class_declaration (class_modifier public) class (identifier Foo) (type_parameter_list < (type_parameters (identifier U)) >) (class_base : (class_type (namespace_or_type_name (identifier IEnumerable) (type_argument_list < (type_arguments (identifier T)) >)))) (class_body { (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type void) (method_header (member_name (identifier Method)) (type_parameter_list < (type_parameters (type_parameters (identifier K)) , (type_parameter (identifier V))) >) ( (parameter_list (fixed_parameters (fixed_parameter (type (identifier K)) (identifier k)) , (fixed_parameter (type (identifier T)) (identifier t)) , (fixed_parameter (type (identifier U)) (identifier u)))) ) (type_parameter_constraints_clause where (type_parameter (identifier K)) : (type_parameter_constraints (primary_constraint (namespace_or_type_name (identifier IList) (type_argument_list < (type_arguments (identifier V)) >))) , (secondary_constraints (secondary_constraint (namespace_or_type_name (identifier IList) (type_argument_list < (type_arguments (identifier T)) >))) , (secondary_constraint (namespace_or_type_name (identifier IList) (type_argument_list < (type_arguments (identifier U)) >)))))) (type_parameter_constraints_clause where (type_parameter (identifier V)) : (type_parameter_constraints (namespace_or_type_name (identifier IList) (type_argument_list < (type_arguments (identifier K)) >))))) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier A) (type_argument_list < (type_arguments (integral_type int)) >))) (explicitly_typed_local_variable_declarators (identifier a)))) ;)) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (identifier M)) ( (argument_list (invocation_expression (primary_expression (simple_name (identifier A) (type_argument_list < (type_arguments (type_argument (identifier B)) , (type_argument (identifier C))) >))) ( (argument_list (literal 5)) ))) ))) ;))) })))) }) ;)) }) ;)) }) ;)) (namespace_member_declaration (class_declaration class (identifier Test) (class_body { (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier Bar3)) ( )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier x) = (expression (object_creation_expression new (type (namespace_or_type_name (namespace_or_type_name (namespace_or_type_name (identifier Boo)) . (identifier Bar) (type_argument_list < (type_arguments (integral_type int)) >)) . (identifier Foo) (type_argument_list < (type_arguments (class_type object)) >))) ( )))))) ;)) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier x)) . (identifier Method) (type_argument_list < (type_arguments (type_argument (class_type string)) , (type_argument (class_type string))) >))) ( (argument_list (argument (literal " ")) , (argument (literal 5)) , (argument (object_creation_expression new (type (class_type object)) ( )))) ))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier q) = (expression (query_expression (from_clause from (identifier i) in (expression (object_creation_expression new (type (array_type (non_array_type (integral_type int)) (rank_specifier [ ]))) (object_or_collection_initializer (collection_initializer { (element_initializer_list (element_initializer (literal 1)) , (element_initializer (literal 2)) , (element_initializer (literal 3)) , (element_initializer (literal 4))) }))))) (query_body (query_body_clauses (where_clause where (boolean_expression (relational_expression (relational_expression (identifier i)) > (shift_expression (literal 5)))))) (select_or_group_clause (select_clause select (expression (identifier i)))))))))) ;))) })))) (class_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (conversion_operator_declarator implicit operator (type (identifier Test)) ( (fixed_parameter (type (class_type string)) (identifier s)) ))) (operator_body (block { (statement_list (return_statement return (expression (object_creation_expression new (type (namespace_or_type_name (namespace_or_type_name (identifier ConsoleApplication1)) . (identifier Test))) ( ))) ;)) })))) (class_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (conversion_operator_declarator explicit operator (type (identifier Test)) ( (fixed_parameter (type (class_type string)) (identifier s) (default_argument = (expression (literal "")))) ))) (operator_body (block { (statement_list (return_statement return (expression (object_creation_expression new (type (identifier Test)) ( ))) ;)) })))) (class_member_declaration (field_declaration (field_modifier public) (type (integral_type int)) (variable_declarators (variable_declarator (identifier foo) = (variable_initializer (literal 5)))) ;)) (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier Bar2)) ( )) (method_body (block { (statement_list (statement (expression_statement (statement_expression (assignment (unary_expression (identifier foo)) (assignment_operator =) (expression (literal 6)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (member_access (primary_expression (this_access this)) . (identifier Foo))) (assignment_operator =) (expression (invocation_expression (primary_expression (member_access (primary_expression (literal 5)) . (identifier GetType))) ( ))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Test)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier t) = (local_variable_initializer (literal "sss")))))) ;))) })))) (class_member_declaration (event_declaration (event_modifier public) event (type (identifier EventHandler)) (variable_declarators (variable_declarator (identifier MyEvent) = (variable_initializer (anonymous_method_expression delegate (block { }))))) ;)) (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier Blah)) ( )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier i) = (local_variable_initializer (literal 5)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier j) = (local_variable_initializer (literal 6)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier Expression) (type_argument_list < (type_arguments (namespace_or_type_name (identifier Func) (type_argument_list < (type_arguments (integral_type int)) >))) >))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier e) = (local_variable_initializer (lambda_expression (anonymous_function_signature (explicit_anonymous_function_signature ( ))) => (anonymous_function_body (identifier i)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier Expression) (type_argument_list < (type_arguments (namespace_or_type_name (identifier Func) (type_argument_list < (type_arguments (type_argument (simple_type bool)) , (type_argument (identifier Action))) >))) >))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier e2) = (local_variable_initializer (lambda_expression (anonymous_function_signature (identifier b)) => (anonymous_function_body (lambda_expression (anonymous_function_signature (explicit_anonymous_function_signature ( ))) => (anonymous_function_body (block { (statement_list (return_statement return ;)) })))))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier Func) (type_argument_list < (type_arguments (type_argument (simple_type bool)) , (type_argument (simple_type bool))) >))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier f) = (local_variable_initializer (anonymous_method_expression async delegate (explicit_anonymous_function_signature ( (explicit_anonymous_function_parameter_list (explicit_anonymous_function_parameter (type (simple_type bool)) (identifier a))) )) (block { (statement_list (return_statement return (expression (await_expression await (unary_expression (logical_negation_operator !) (unary_expression (identifier a))))) ;)) }))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier Func) (type_argument_list < (type_arguments (type_argument (integral_type int)) , (type_argument (integral_type int)) , (type_argument (integral_type int))) >))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier f2) = (local_variable_initializer (lambda_expression (anonymous_function_signature (implicit_anonymous_function_signature ( (implicit_anonymous_function_parameter_list (implicit_anonymous_function_parameter (identifier a)) , (implicit_anonymous_function_parameter (identifier b))) ))) => (anonymous_function_body (literal 0)))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier f2)) (assignment_operator =) (expression (lambda_expression (anonymous_function_signature (explicit_anonymous_function_signature ( (explicit_anonymous_function_parameter_list (explicit_anonymous_function_parameter (type (integral_type int)) (identifier a)) , (explicit_anonymous_function_parameter (type (integral_type int)) (identifier b))) ))) => (anonymous_function_body (literal 1)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Action)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier a) = (local_variable_initializer (identifier Blah)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier f2)) (assignment_operator =) (expression (lambda_expression (anonymous_function_signature (explicit_anonymous_function_signature ( ))) => (anonymous_function_body (block { })))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier f2)) (assignment_operator =) (expression (lambda_expression (anonymous_function_signature (explicit_anonymous_function_signature ( ))) => (anonymous_function_body (block { (statement_list (empty_statement ;)) })))))) ;))) })))) (class_member_declaration (delegate_declaration delegate (return_type (identifier Recursive)) (delegate_header (identifier Recursive) ( (parameter_list (fixed_parameter (type (identifier Recursive)) (identifier r))) ) ;))) (class_member_declaration (delegate_declaration delegate (return_type (identifier Recursive)) (delegate_header (identifier Recursive) (variant_type_parameter_list < (variant_type_parameters (variant_type_parameters (identifier A)) , (type_parameter (identifier R))) >) ( (parameter_list (fixed_parameter (type (namespace_or_type_name (identifier Recursive) (type_argument_list < (type_arguments (type_argument (identifier A)) , (type_argument (identifier R))) >))) (identifier r))) ) ;))) (class_member_declaration (property_declaration (property_modifier public) (type (identifier Type)) (member_name (identifier Foo)) (property_body { (accessor_declarations (get_accessor_declaration (attributes (attribute_section [ (attribute_list (attribute (attribute_name (identifier Obsolete)) (attribute_arguments ( (positional_argument_list (literal "Name")) , (named_argument_list (named_argument (identifier error) = (attribute_argument_expression (boolean_literal false)))) )))) ])) get (accessor_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier result) = (expression (typeof_expression typeof ( (type (namespace_or_type_name (identifier IEnumerable) (type_argument_list < (type_arguments (integral_type int)) >))) )))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier t) = (expression (equality_expression (equality_expression (typeof_expression typeof ( (type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) ))) == (relational_expression (typeof_expression typeof ( (type (namespace_or_type_name (identifier Nullable) (type_argument_list < (type_arguments (integral_type int)) >))) )))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier t)) (assignment_operator =) (expression (typeof_expression typeof ( (type (namespace_or_type_name (identifier IEnumerable) (type_argument_list < (type_arguments (array_type (non_array_type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (rank_specifier [ ]) (rank_specifier [ ]) (rank_specifier [ ]))) >))) ))))) ;)) (statement (return_statement return (expression (typeof_expression typeof ( (unbound_type_name (identifier IEnumerable) (generic_dimension_specifier < >)) ))) ;))) }))) (set_accessor_declaration set (accessor_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier t) = (expression (typeof_expression typeof ( (type (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier Int32))) )))))) ;)) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier t)) . (identifier ToString))) ( ))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier t)) (assignment_operator =) (expression (contextual_keyword value)))) ;))) })))) }))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type void) (method_header (member_name (identifier Constants)) ( )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier i) = (local_variable_initializer (additive_expression (additive_expression (additive_expression (additive_expression (literal 1)) + (multiplicative_expression (literal 2))) + (multiplicative_expression (literal 3))) + (multiplicative_expression (literal 5)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (namespace_or_type_name (qualified_alias_member (identifier (contextual_keyword global)) :: (identifier System))) . (identifier String))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier s) = (local_variable_initializer (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (additive_expression (literal "a")) + (multiplicative_expression (cast_expression ( (type (namespace_or_type_name (namespace_or_type_name (identifier System)) . (identifier String))) ) (unary_expression (literal "a"))))) + (multiplicative_expression (literal "a"))) + (multiplicative_expression (literal "a"))) + (multiplicative_expression (literal "a"))) + (multiplicative_expression (literal "A")))))))) ;))) })))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type void) (method_header (member_name (identifier ConstructedType)) ( )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier List) (type_argument_list < (type_arguments (integral_type int)) >))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier i) = (local_variable_initializer (null_literal null)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier c) = (local_variable_initializer (member_access (primary_expression (identifier i)) . (identifier Count))))))) ;))) })))) }))) }))) (namespace_member_declaration (namespace_declaration namespace (qualified_identifier (identifier Comments) . (identifier XmlComments) . (identifier UndocumentedKeywords)) (namespace_body { (namespace_member_declaration (class_declaration class (identifier C) (type_parameter_list < (type_parameters (identifier T)) >) (class_body { (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier M)) (type_parameter_list < (type_parameters (identifier U)) >) ( (parameter_list (fixed_parameters (fixed_parameter (type (identifier T)) (identifier t)) , (fixed_parameter (type (identifier U)) (identifier u)))) )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier intValue) = (local_variable_initializer (literal 0)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier intValue)) (assignment_operator =) (expression (additive_expression (additive_expression (identifier intValue)) + (multiplicative_expression (literal 1)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type string)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier strValue) = (local_variable_initializer (literal "hello")))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier MyClass)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier c) = (local_variable_initializer (object_creation_expression new (type (identifier MyClass)) ( ))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type string)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier verbatimStr) = (local_variable_initializer (literal @"\\\\")))))) ;))) })))) }))) (namespace_member_declaration (class_declaration class (identifier TestClassclass_body { }))) (namespace_member_declaration (class_declaration class (identifier TestClassclass_body { }))) (namespace_member_declaration (class_declaration class (identifier (contextual_keyword yield)) (class_body { (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier Params)) ( (parameter_list (fixed_parameters (fixed_parameter (parameter_modifier (parameter_mode_modifier ref)) (type (contextual_keyword dynamic)) (identifier a)) , (fixed_parameter (parameter_modifier (parameter_mode_modifier out)) (type (contextual_keyword dynamic)) (identifier b))) , (parameter_array params (array_type (non_array_type (contextual_keyword dynamic)) (rank_specifier [ ])) (identifier c))) )) (method_body (block { })))) (class_member_declaration (method_declaration method_modifiers (return_type void) (method_header (member_name (identifier Params)) ( (parameter_list (fixed_parameters (fixed_parameter (parameter_modifier (parameter_mode_modifier out)) (type (contextual_keyword dynamic)) (identifier a) (default_argument = (expression (literal 2)))) , (fixed_parameter (parameter_modifier (parameter_mode_modifier ref)) (type (contextual_keyword dynamic)) (identifier c) (default_argument = (expression (explictly_typed_default default ( (type (contextual_keyword dynamic)) )))))) , (parameter_array params (array_type (non_array_type (contextual_keyword dynamic)) (rank_specifier [ ]) (rank_specifier [ ])) (identifier c))) )) (method_body (block { })))) (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier public)) (method_modifier (ref_method_modifier override))) (return_type (class_type string)) (method_header (member_name (identifier ToString)) ( )) (method_body (block { (statement_list (return_statement return (expression (invocation_expression (primary_expression (base_access base . (identifier ToString))) ( ))) ;)) })))) (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier public)) partial) (return_type void) (method_header (member_name (identifier OnError)) ( )) (method_body ;))) (class_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier public)) partial) (return_type void) (method_header (member_name (identifier method)) ( )) (method_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (rank_specifier [ ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier a) = (local_variable_initializer (array_creation_expression new (non_array_type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) [ (expression_list (literal 5)) ])))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (array_type (non_array_type (integral_type int)) (rank_specifier [ ]))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier (contextual_keyword var)) = (local_variable_initializer (array_initializer { (variable_initializer_list (variable_initializer (literal 1)) , (variable_initializer (literal 2)) , (variable_initializer (literal 3)) , (variable_initializer (literal 4)) , (variable_initializer (literal 5))) })))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier i) = (local_variable_initializer (element_access (primary_no_array_creation_expression (identifier a)) [ (argument_list (identifier i)) ])))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (namespace_or_type_name (identifier Foo) (type_argument_list < (type_arguments (identifier T)) >))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier f) = (local_variable_initializer (object_creation_expression new (type (namespace_or_type_name (identifier Foo) (type_argument_list < (type_arguments (integral_type int)) >))) ( ))))))) ;)) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier f)) . (identifier method))) ( ))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator =) (expression (inclusive_or_expression (inclusive_or_expression (and_expression (and_expression (additive_expression (additive_expression (additive_expression (identifier i)) + (multiplicative_expression (identifier i))) - (multiplicative_expression (multiplicative_expression (multiplicative_expression (multiplicative_expression (identifier i)) * (unary_expression (identifier i))) / (unary_expression (identifier i))) % (unary_expression (identifier i))))) & (equality_expression (identifier i)))) | (exclusive_or_expression (exclusive_or_expression (identifier i)) ^ (and_expression (identifier i))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (simple_type bool)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier b) = (local_variable_initializer (inclusive_or_expression (inclusive_or_expression (and_expression (and_expression (boolean_literal true)) & (equality_expression (boolean_literal false)))) | (exclusive_or_expression (exclusive_or_expression (boolean_literal true)) ^ (and_expression (boolean_literal false))))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier b)) (assignment_operator =) (expression (unary_expression (logical_negation_operator !) (unary_expression (identifier b)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator =) (expression (unary_expression ~ (unary_expression (identifier i)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier b)) (assignment_operator =) (expression (conditional_and_expression (conditional_and_expression (relational_expression (relational_expression (identifier i)) < (shift_expression (identifier i)))) && (inclusive_or_expression (relational_expression (relational_expression (identifier i)) > (shift_expression (identifier i)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier ii) = (local_variable_initializer (literal 5)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier f) = (local_variable_initializer (conditional_expression (null_coalescing_expression (boolean_literal true)) ? (expression (literal 1)) : (expression (literal 0)))))))) ;)) (statement (expression_statement (statement_expression (post_increment_expression (primary_expression (identifier i)) ++)) ;)) (statement (expression_statement (statement_expression (post_decrement_expression (primary_expression (identifier i)) --)) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier b)) (assignment_operator =) (expression (conditional_or_expression (conditional_or_expression (conditional_and_expression (conditional_and_expression (boolean_literal true)) && (inclusive_or_expression (boolean_literal false)))) || (conditional_and_expression (boolean_literal true)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier b)) (assignment_operator =) (expression (conditional_and_expression (conditional_and_expression (conditional_and_expression (conditional_and_expression (equality_expression (equality_expression (identifier i)) == (relational_expression (identifier i)))) && (inclusive_or_expression (equality_expression (equality_expression (identifier i)) != (relational_expression (identifier i))))) && (inclusive_or_expression (relational_expression (relational_expression (identifier i)) <= (shift_expression (identifier i))))) && (inclusive_or_expression (relational_expression (relational_expression (identifier i)) >= (shift_expression (identifier i)))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator +=) (expression (literal 5.0)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator -=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator *=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator /=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator %=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator &=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator |=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator ^=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator <<=) (expression (identifier i)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier i)) (assignment_operator (right_shift_assignment > >=)) (expression (identifier i)))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type object)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier s) = (local_variable_initializer (lambda_expression (anonymous_function_signature (identifier x)) => (anonymous_function_body (additive_expression (additive_expression (identifier x)) + (multiplicative_expression (literal 1)))))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (floating_point_type double)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier d) = (local_variable_initializer (literal .3)))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Point)) (explicitly_typed_local_variable_declarators (identifier point)))) ;)) (statement (unsafe_statement unsafe (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (pointer_type (value_type (identifier Point)) *)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier p) = (local_variable_initializer (addressof_expression & (unary_expression (identifier point)))))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (pointer_member_access (primary_expression (identifier p)) -> (identifier x))) (assignment_operator =) (expression (literal 10)))) ;))) }))) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (qualified_alias_member (identifier IO) :: (identifier BinaryReader))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier br) = (local_variable_initializer (null_literal null)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (element_access (primary_no_array_creation_expression (identifier x)) [ (argument_list (argument (argument_name (identifier i) :) (argument_value (literal 1)))) ])) (assignment_operator =) (expression (literal 3)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (element_access (primary_no_array_creation_expression (identifier x)) [ (argument_list (argument (argument_name (identifier i) :) (argument_value (literal 1))) , (argument (argument_name (identifier j) :) (argument_value (literal 5)))) ])) (assignment_operator =) (expression (literal "str")))) ;))) })))) (class_member_declaration (struct_declaration struct (identifier Point) (struct_body { (struct_member_declaration (field_declaration (field_modifier public) (type (integral_type int)) (variable_declarators (identifier X)) ;)) (struct_member_declaration (field_declaration (field_modifier public) (type (integral_type int)) (variable_declarators (identifier Y)) ;)) (struct_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type void) (method_header (member_name (identifier ThisAccess)) ( )) (method_body (block { (statement_list (expression_statement (statement_expression (assignment (unary_expression (this_access this)) (assignment_operator =) (expression (this_access this)))) ;)) })))) }))) }))) (namespace_member_declaration (class_declaration class (identifier CSharp6Features) (class_body { (class_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier First)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;)) (set_accessor_declaration set (accessor_body ;))) } (property_initializer = (variable_initializer (literal "Jane")) ;)))) (class_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier Last)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;)) (set_accessor_declaration set (accessor_body ;))) } (property_initializer = (variable_initializer (literal "Doe")) ;)))) (class_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier Third)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;))) } (property_initializer = (variable_initializer (literal "Jane")) ;)))) (class_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier Fourth)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;))) } (property_initializer = (variable_initializer (literal "Doe")) ;)))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type (identifier Point)) (method_header (member_name (identifier Move)) ( (parameter_list (fixed_parameters (fixed_parameter (type (integral_type int)) (identifier dx)) , (fixed_parameter (type (integral_type int)) (identifier dy)))) )) (method_body => (expression (object_creation_expression new (type (identifier Point)) ( (argument_list (argument (additive_expression (additive_expression (identifier x)) + (multiplicative_expression (identifier dx)))) , (argument (additive_expression (additive_expression (identifier y)) + (multiplicative_expression (identifier dy))))) ))) ;))) (class_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (binary_operator_declarator (type (identifier Complex)) operator (overloadable_binary_operator +) ( (fixed_parameter (type (identifier Complex)) (identifier a)) , (fixed_parameter (type (identifier Complex)) (identifier b)) ))) (operator_body => (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier a)) . (identifier Add))) ( (argument_list (identifier b)) ))) ;))) (class_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (conversion_operator_declarator implicit operator (type (class_type string)) ( (fixed_parameter (type (identifier Person)) (identifier p)) ))) (operator_body => (expression (additive_expression (additive_expression (additive_expression (member_access (primary_expression (identifier p)) . (identifier First))) + (multiplicative_expression (literal " "))) + (multiplicative_expression (member_access (primary_expression (identifier p)) . (identifier Last))))) ;))) (class_member_declaration (method_declaration (method_modifiers (ref_method_modifier public)) (return_type void) (method_header (member_name (identifier Print)) ( )) (method_body => (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier Console)) . (identifier WriteLine))) ( (argument_list (additive_expression (additive_expression (additive_expression (identifier First)) + (multiplicative_expression (literal " "))) + (multiplicative_expression (identifier Last)))) ))) ;))) (class_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier Name)) (property_body => (expression (additive_expression (additive_expression (additive_expression (identifier First)) + (multiplicative_expression (literal " "))) + (multiplicative_expression (identifier Last)))) ;))) (class_member_declaration (indexer_declaration (indexer_modifier public) (indexer_declarator (type (integral_type int)) this [ (parameter_list (fixed_parameter (type (integral_type long)) (identifier id))) ]) (indexer_body => (expression (identifier id)) ;))) (class_member_declaration (method_declaration (method_modifiers (method_modifier async)) (return_type void) (method_header (member_name (identifier Test)) ( )) (method_body (block { (statement_list (statement (expression_statement (statement_expression (invocation_expression (primary_expression (identifier WriteLine)) ( (argument_list (invocation_expression (primary_expression (identifier Sqrt)) ( (argument_list (additive_expression (additive_expression (multiplicative_expression (multiplicative_expression (literal 3)) * (unary_expression (literal 3)))) + (multiplicative_expression (multiplicative_expression (literal 4)) * (unary_expression (literal 4))))) ))) ))) ;)) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (identifier WriteLine)) ( (argument_list (additive_expression (additive_expression (identifier Friday)) - (multiplicative_expression (identifier Monday)))) ))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier range) = (expression (invocation_expression (primary_expression (identifier Range)) ( (argument_list (argument (literal 5)) , (argument (literal 17))) )))))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier even) = (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier range)) . (identifier Where))) ( (argument_list (lambda_expression (anonymous_function_signature (identifier i)) => (anonymous_function_body (equality_expression (equality_expression (multiplicative_expression (multiplicative_expression (identifier i)) % (unary_expression (literal 2)))) == (relational_expression (literal 0)))))) )))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier length) = (local_variable_initializer (null_conditional_member_access (primary_expression (identifier customers)) ? . (identifier Length))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Customer)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier first) = (local_variable_initializer (null_conditional_element_access (primary_no_array_creation_expression (identifier customers)) ? [ (argument_list (literal 0)) ])))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier length) = (local_variable_initializer (null_coalescing_expression (conditional_or_expression (null_conditional_member_access (primary_expression (identifier customers)) ? . (identifier Length))) ?? (null_coalescing_expression (literal 0)))))))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (nullable_value_type (non_nullable_value_type (integral_type int)) (nullable_type_annotation ?))) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier first) = (local_variable_initializer (null_conditional_member_access (primary_expression (null_conditional_member_access (primary_expression (null_conditional_element_access (primary_no_array_creation_expression (identifier customers)) ? [ (argument_list (literal 0)) ])) ? . (identifier Orders))) ? . (identifier Count) (dependent_access ( )))))))) ;)) (statement (expression_statement (statement_expression (null_conditional_invocation_expression (null_conditional_member_access (primary_expression (identifier PropertyChanged)) ? . (identifier Invoke)) ( (argument_list (argument (this_access this)) , (argument (identifier args))) ))) ;)) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (class_type string)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier s) = (local_variable_initializer (interpolated_regular_string_expression 〔$"〕 { (regular_interpolation (expression (member_access (primary_expression (identifier p)) . (identifier Name))) , (interpolation_minimum_width (literal 20))) } 〔 is 〕 { (regular_interpolation (expression (member_access (primary_expression (identifier p)) . (identifier Age))) 〔:D3〕) } 〔 year{{s}} old #〕 〔"〕)))))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier s)) (assignment_operator =) (expression (interpolated_regular_string_expression 〔$"〕 { (regular_interpolation (member_access (primary_expression (identifier p)) . (identifier Name))) } 〔 is \"〕 { (regular_interpolation (member_access (primary_expression (identifier p)) . (identifier Age))) } 〔 year〕 { (regular_interpolation (parenthesized_expression ( (expression (conditional_expression (null_coalescing_expression (equality_expression (equality_expression (member_access (primary_expression (identifier p)) . (identifier Age))) == (relational_expression (literal 1)))) ? (expression (literal "")) : (expression (literal "s")))) ))) } 〔 old〕 〔"〕)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier s)) (assignment_operator =) (expression (interpolated_regular_string_expression 〔$"〕 { (regular_interpolation (parenthesized_expression ( (expression (conditional_expression (null_coalescing_expression (equality_expression (equality_expression (member_access (primary_expression (identifier p)) . (identifier Age))) == (relational_expression (literal 2)))) ? (expression (interpolated_regular_string_expression 〔$"〕 { (regular_interpolation (object_creation_expression new (type (identifier Person)) (object_or_collection_initializer (object_initializer { })))) } 〔"〕)) : (expression (literal "")))) ))) } 〔"〕)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier s)) (assignment_operator =) (expression (interpolated_verbatim_string_expression 〔$@"〕 〔\〕 { (verbatim_interpolation (member_access (primary_expression (identifier p)) . (identifier Name))) } 〔\n                                   ""\〕 〔"〕)))) ;)) (statement (expression_statement (statement_expression (assignment (unary_expression (identifier s)) (assignment_operator =) (expression (interpolated_regular_string_expression 〔$"〕 〔Color [ R=〕 { (regular_interpolation (expression (invocation_expression (primary_expression (identifier func)) ( (argument_list (argument (argument_name (identifier b) :) (argument_value (literal 3)))) ))) 〔:#0.##〕) } 〔, G=〕 { (regular_interpolation (expression (identifier G)) 〔:#0.##〕) } 〔, B=〕 { (regular_interpolation (expression (identifier B)) 〔:#0.##〕) } 〔, A=〕 { (regular_interpolation (expression (identifier A)) 〔:#0.##〕) } 〔 ]〕 〔"〕)))) ;)) (statement (if_statement if ( (boolean_expression (equality_expression (equality_expression (identifier x)) == (relational_expression (null_literal null)))) ) (embedded_statement (throw_statement throw (expression (object_creation_expression new (type (identifier ArgumentNullException)) ( (argument_list (invocation_expression (primary_expression (contextual_keyword nameof)) ( (argument_list (identifier x)) ))) ))) ;)))) (statement (expression_statement (statement_expression (invocation_expression (primary_expression (identifier WriteLine)) ( (argument_list (invocation_expression (primary_expression (contextual_keyword nameof)) ( (argument_list (member_access (primary_expression (member_access (primary_expression (identifier person)) . (identifier Address))) . (identifier ZipCode))) ))) ))) ;)) (statement (declaration_statement (local_variable_declaration (implicitly_typed_local_variable_declaration var (implicitly_typed_local_variable_declarator (identifier numbers) = (expression (object_creation_expression new (type (namespace_or_type_name (identifier Dictionary) (type_argument_list < (type_arguments (type_argument (integral_type int)) , (type_argument (class_type string))) >))) (object_or_collection_initializer (object_initializer { (member_initializer_list (member_initializer (initializer_target [ (argument_list (literal 7)) ]) = (initializer_value (literal "seven"))) , (member_initializer (initializer_target [ (argument_list (literal 9)) ]) = (initializer_value (literal "nine"))) , (member_initializer (initializer_target [ (argument_list (literal 13)) ]) = (initializer_value (literal "thirteen")))) }))))))) ;)) (statement (try_statement try (block { }) (catch_clauses (specific_catch_clause catch (exception_specifier ( (type (identifier MyException)) (identifier e) )) (exception_filter when ( (boolean_expression (invocation_expression (primary_expression (identifier myfilter)) ( (argument_list (identifier e)) ))) )) (block { }))))) (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (identifier Resource)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier res) = (local_variable_initializer (null_literal null)))))) ;)) (statement (try_statement try (block { (statement_list (expression_statement (statement_expression (assignment (unary_expression (identifier res)) (assignment_operator =) (expression (await_expression await (unary_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier Resource)) . (identifier OpenAsync))) ( ))))))) ;)) }) (catch_clauses (specific_catch_clause catch (exception_specifier ( (type (identifier ResourceException)) (identifier e) )) (block { (statement_list (expression_statement (statement_expression (await_expression await (unary_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier Resource)) . (identifier LogAsync))) ( (argument_list (argument (identifier res)) , (argument (identifier e))) ))))) ;)) }))) (finally_clause finally (block { (statement_list (if_statement if ( (boolean_expression (equality_expression (equality_expression (identifier res)) != (relational_expression (null_literal null)))) ) (embedded_statement (expression_statement (statement_expression (await_expression await (unary_expression (invocation_expression (primary_expression (member_access (primary_expression (identifier res)) . (identifier CloseAsync))) ( ))))) ;)))) }))))) })))) }))) })))))
