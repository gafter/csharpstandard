(prog (compilation_unit (namespace_declaration namespace (qualified_identifier (identifier My)) (namespace_body { (namespace_member_declaration (struct_declaration (struct_modifier public) struct (identifier S) (struct_interfaces : (interface_type_list (identifier I))) (struct_body { (struct_member_declaration (constructor_declaration (constructor_modifier public) (constructor_declarator (identifier S) ( )) (constructor_body (block { })))) (struct_member_declaration (field_declaration (field_modifier private) (type (integral_type int)) (variable_declarators (identifier f1)) ;)) (struct_member_declaration (field_declaration (attributes (attribute_section [ (attribute_list (attribute (attribute_name (identifier Obsolete)) (attribute_arguments ( (positional_argument_list (positional_argument (literal "Use Script instead")) , (positional_argument (argument_name (identifier error) :) (attribute_argument_expression (boolean_literal false)))) )))) ])) (field_modifier private) (field_modifier volatile) (type (integral_type int)) (variable_declarators (identifier f2)) ;)) (struct_member_declaration (method_declaration (method_modifiers (method_modifier (ref_method_modifier public)) (method_modifier (ref_method_modifier abstract))) (return_type (integral_type int)) (method_header (member_name (identifier m)) (type_parameter_list < (decorated_type_parameter (identifier T)) >) ( (parameter_list (fixed_parameter (type (identifier T)) (identifier t))) ) (type_parameter_constraints_clause where (type_parameter (identifier T)) : (type_parameter_constraints (primary_constraint struct)))) (method_body (block { (statement_list (return_statement return (expression (literal 1)) ;)) })))) (struct_member_declaration (property_declaration (property_modifier public) (type (class_type string)) (member_name (identifier P)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body (block { (statement_list (statement (declaration_statement (local_variable_declaration (explicitly_typed_local_variable_declaration (type (integral_type int)) (explicitly_typed_local_variable_declarators (explicitly_typed_local_variable_declarator (identifier (contextual_keyword value)) = (local_variable_initializer (literal 0)))))) ;)) (statement (return_statement return (expression (literal "A")) ;))) }))) (set_accessor_declaration set (accessor_body ;))) }))) (struct_member_declaration (property_declaration (property_modifier public) (property_modifier abstract) (type (class_type string)) (member_name (identifier P)) (property_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;))) }))) (struct_member_declaration (indexer_declaration (indexer_modifier public) (indexer_modifier abstract) (indexer_declarator (type (integral_type int)) this [ (parameter_list (fixed_parameter (type (integral_type int)) (identifier index))) ]) (indexer_body { (accessor_declarations (get_accessor_declaration get (accessor_body ;)) (set_accessor_declaration (accessor_modifier internal protected) set (accessor_body ;))) }))) (struct_member_declaration (event_declaration (event_modifier public) event (type (identifier Event)) (variable_declarators (identifier E)) ;)) (struct_member_declaration (operator_declaration (operator_modifier public) (operator_modifier static) (operator_declarator (binary_operator_declarator (type (identifier A)) operator (overloadable_binary_operator +) ( (fixed_parameter (type (identifier A)) (identifier first)) , (fixed_parameter (type (identifier A)) (identifier second)) ))) (operator_body (block { (statement_list (return_statement return (expression (invocation_expression (primary_expression (member_access (primary_expression (identifier first)) . (identifier Add))) ( (argument_list (identifier second)) ))) ;)) })))) (struct_member_declaration (fixed_size_buffer_declaration fixed (buffer_element_type (integral_type int)) (fixed_size_buffer_declarators (fixed_size_buffer_declarator (identifier field) [ (constant_expression (literal 10)) ])) ;)) (struct_member_declaration (class_declaration class (identifier C) (class_body { }))) }))) (namespace_member_declaration (interface_declaration (interface_modifier public) interface (identifier I) (interface_body { (interface_member_declaration (interface_method_declaration (return_type void) (interface_method_header (identifier A) ( (parameter_list (fixed_parameter (type (integral_type int)) (identifier (contextual_keyword value)))) ) ;))) (interface_member_declaration (interface_property_declaration (type (class_type string)) (identifier Value) { (interface_accessors get ; set ;) })) }))) }))))
